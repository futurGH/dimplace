/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

const documents = {
    "\n\tquery CoursePage($id: String!, $orgUnitId: String!) {\n\t\torganization(id: $id) {\n\t\t\tname\n\t\t\timageUrl\n\t\t\thomeUrl\n        }\n\t\tactivityFeedArticlePage(orgUnitId: $orgUnitId) {\n\t\t\tactivityFeedArticles {\n\t\t\t\t...ArticleDetails\n\t\t\t\t...AssignmentDetails\n\t\t\t}\n\t\t}\n\t}\n    fragment ArticleDetails on ActivityFeedArticle {\n        id\n        type\n        author {\n            ...UserDetails\n        }\n        message\n        publishedDate\n        attachmentLinks {\n            ...LinkDetails\n        }\n        allCommentsLink\n        commentsCount\n        firstComment {\n            ...CommentDetails\n        }\n        isPinned\n    }\n    fragment AssignmentDetails on ActivityFeedAssignment {\n        id\n        type\n        author {\n            ...UserDetails\n        }\n        publishedDate\n        allCommentsLink\n        commentsCount\n        name\n        instructions\n        dueDate\n        attachmentLinks {\n            ...LinkDetails\n        }\n        firstComment {\n            ...CommentDetails\n        }\n        submissionLink\n        isPinned\n    }\n    fragment UserDetails on User {\n        id\n        displayName\n        firstName\n        lastName\n        imageUrl\n    }\n    fragment LinkDetails on ActivityFeedLink {\n        id\n        type\n        name\n        href\n    }\n    fragment CommentDetails on ActivityFeedComment {\n        id\n        author {\n            ...UserDetails\n        }\n        message\n        publishedDate\n    }\n": types.CoursePageDocument,
    "\n    query CourseList($startDate: String!, $endDate: String!) {\n        activities(start: $startDate, end: $endDate) {\n            id\n            source {\n                id\n                name\n            }\n            organization {\n                id\n            }\n            completed\n\t\t\tcompletionDate\n\t\t\tdueDate\n        }\n\t\tenrollmentPage {\n\t\t\tenrollments {\n\t\t\t\torganization {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\timageUrl\n\t\t\t\t\tstartDate\n\t\t\t\t\tendDate\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.CourseListDocument,
};

export function graphql(source: "\n\tquery CoursePage($id: String!, $orgUnitId: String!) {\n\t\torganization(id: $id) {\n\t\t\tname\n\t\t\timageUrl\n\t\t\thomeUrl\n        }\n\t\tactivityFeedArticlePage(orgUnitId: $orgUnitId) {\n\t\t\tactivityFeedArticles {\n\t\t\t\t...ArticleDetails\n\t\t\t\t...AssignmentDetails\n\t\t\t}\n\t\t}\n\t}\n    fragment ArticleDetails on ActivityFeedArticle {\n        id\n        type\n        author {\n            ...UserDetails\n        }\n        message\n        publishedDate\n        attachmentLinks {\n            ...LinkDetails\n        }\n        allCommentsLink\n        commentsCount\n        firstComment {\n            ...CommentDetails\n        }\n        isPinned\n    }\n    fragment AssignmentDetails on ActivityFeedAssignment {\n        id\n        type\n        author {\n            ...UserDetails\n        }\n        publishedDate\n        allCommentsLink\n        commentsCount\n        name\n        instructions\n        dueDate\n        attachmentLinks {\n            ...LinkDetails\n        }\n        firstComment {\n            ...CommentDetails\n        }\n        submissionLink\n        isPinned\n    }\n    fragment UserDetails on User {\n        id\n        displayName\n        firstName\n        lastName\n        imageUrl\n    }\n    fragment LinkDetails on ActivityFeedLink {\n        id\n        type\n        name\n        href\n    }\n    fragment CommentDetails on ActivityFeedComment {\n        id\n        author {\n            ...UserDetails\n        }\n        message\n        publishedDate\n    }\n"): (typeof documents)["\n\tquery CoursePage($id: String!, $orgUnitId: String!) {\n\t\torganization(id: $id) {\n\t\t\tname\n\t\t\timageUrl\n\t\t\thomeUrl\n        }\n\t\tactivityFeedArticlePage(orgUnitId: $orgUnitId) {\n\t\t\tactivityFeedArticles {\n\t\t\t\t...ArticleDetails\n\t\t\t\t...AssignmentDetails\n\t\t\t}\n\t\t}\n\t}\n    fragment ArticleDetails on ActivityFeedArticle {\n        id\n        type\n        author {\n            ...UserDetails\n        }\n        message\n        publishedDate\n        attachmentLinks {\n            ...LinkDetails\n        }\n        allCommentsLink\n        commentsCount\n        firstComment {\n            ...CommentDetails\n        }\n        isPinned\n    }\n    fragment AssignmentDetails on ActivityFeedAssignment {\n        id\n        type\n        author {\n            ...UserDetails\n        }\n        publishedDate\n        allCommentsLink\n        commentsCount\n        name\n        instructions\n        dueDate\n        attachmentLinks {\n            ...LinkDetails\n        }\n        firstComment {\n            ...CommentDetails\n        }\n        submissionLink\n        isPinned\n    }\n    fragment UserDetails on User {\n        id\n        displayName\n        firstName\n        lastName\n        imageUrl\n    }\n    fragment LinkDetails on ActivityFeedLink {\n        id\n        type\n        name\n        href\n    }\n    fragment CommentDetails on ActivityFeedComment {\n        id\n        author {\n            ...UserDetails\n        }\n        message\n        publishedDate\n    }\n"];
export function graphql(source: "\n    query CourseList($startDate: String!, $endDate: String!) {\n        activities(start: $startDate, end: $endDate) {\n            id\n            source {\n                id\n                name\n            }\n            organization {\n                id\n            }\n            completed\n\t\t\tcompletionDate\n\t\t\tdueDate\n        }\n\t\tenrollmentPage {\n\t\t\tenrollments {\n\t\t\t\torganization {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\timageUrl\n\t\t\t\t\tstartDate\n\t\t\t\t\tendDate\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n    query CourseList($startDate: String!, $endDate: String!) {\n        activities(start: $startDate, end: $endDate) {\n            id\n            source {\n                id\n                name\n            }\n            organization {\n                id\n            }\n            completed\n\t\t\tcompletionDate\n\t\t\tdueDate\n        }\n\t\tenrollmentPage {\n\t\t\tenrollments {\n\t\t\t\torganization {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\timageUrl\n\t\t\t\t\tstartDate\n\t\t\t\t\tendDate\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];

export function graphql(source: string): unknown;
export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;